version: '3.8'

services:
  traefik:
    image: traefik:v3.1
    restart: unless-stopped
    command:
#      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=Discord@hotmail.de"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpChallenge.entryPoint=web"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"

  flask:
    build: .
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    labels:
      - "traefik.http.routers.flask.rule=Host(`c103-219.cloud.gwdg.de`)"
      - "traefik.http.routers.flask.entrypoints=websecure"
      - "traefik.http.routers.flask.tls.certresolver=myresolver"
      - "traefik.http.services.flask.loadbalancer.server.port=8000"
      - "traefik.http.services.flask.loadbalancer.server.url=10.254.1.31"
      - "traefik.http.routers.flask.tls=true"
      - "traefik.enable=true"
    depends_on:
      - traefik

volumes:
  letsencrypt:
